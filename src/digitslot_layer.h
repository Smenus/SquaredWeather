#ifndef DIGITSLOT_LAYER_H
#define DIGITSLOT_LAYER_H

#define TILE_SIZE 10
#define SPACING_X TILE_SIZE
#define SPACING_Y TILE_SIZE

#define FONT_HEIGHT_BLOCKS (sizeof *FONT / sizeof **FONT)
#define FONT_WIDTH_BLOCKS (sizeof **FONT)
#define TOTALBLOCKS FONT_HEIGHT_BLOCKS * FONT_WIDTH_BLOCKS
#define FONT_HEIGHT FONT_HEIGHT_BLOCKS * TILE_SIZE
#define FONT_WIDTH FONT_WIDTH_BLOCKS * TILE_SIZE

static unsigned char blocks[][5][5] =  {{
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,0,1,0,1},
    {1,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,1,0,1,1},
    {0,0,0,0,1},
    {1,1,1,0,1},
    {0,0,0,0,1},
    {1,1,1,0,1}
}, {
    {1,1,1,1,1},
    {0,0,0,0,1},
    {1,1,1,1,1},
    {1,0,0,0,0},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {0,0,0,0,1},
    {0,1,1,1,1},
    {0,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,0,1,0,1},
    {1,0,0,0,1},
    {1,1,1,1,1},
    {0,0,0,0,1},
    {1,1,1,0,1}
}, {
    {1,1,1,1,1},
    {1,0,0,0,0},
    {1,1,1,1,1},
    {0,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {1,0,0,0,0},
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {0,0,0,0,1},
    {1,0,1,0,1},
    {1,0,1,0,1},
    {1,0,1,0,1}
}, {
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,1,1,1,1},
    {0,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {0,0,0,0,0},
    {1,1,1,1,1},
    {0,0,0,0,0},
    {1,1,1,1,1}
}, {
    {1,0,1,0,1},
    {1,0,1,0,1},
    {1,0,1,0,1},
    {1,0,1,0,1},
    {1,0,1,0,1}
}, {
    {1,0,0,0,0},
    {0,0,1,1,1},
    {0,0,1,0,0},
    {0,0,1,0,0},
    {0,0,1,1,1}
}};
static unsigned char clean[][5][5] =  {{
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,1,1,1}
}, {
    {0,0,0,1,1},
    {0,0,0,0,1},
    {0,0,0,0,1},
    {0,0,0,0,1},
    {0,0,0,0,1}
}, {
    {1,1,1,1,1},
    {0,0,0,0,1},
    {1,1,1,1,1},
    {1,0,0,0,0},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {0,0,0,0,1},
    {0,1,1,1,1},
    {0,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,1,1,1},
    {0,0,0,0,1},
    {0,0,0,0,1}
}, {
    {1,1,1,1,1},
    {1,0,0,0,0},
    {1,1,1,1,1},
    {0,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {1,0,0,0,0},
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {0,0,0,0,1},
    {0,0,0,0,1},
    {0,0,0,0,1},
    {0,0,0,0,1}
}, {
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,1,1,1,1},
    {0,0,0,0,1},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {1,1,1,1,1},
    {1,1,1,1,1},
    {1,1,1,1,1},
    {1,1,1,1,1}
}, {
    {1,1,1,1,1},
    {1,1,1,1,1},
    {1,1,1,1,1},
    {1,1,1,1,1},
    {1,1,1,1,1}
}, {
    {1,0,0,0,0},
    {0,0,1,1,1},
    {0,0,1,0,0},
    {0,0,1,0,0},
    {0,0,1,1,1}
}};


typedef struct {
    Layer layer;
    int   prevDigit;
    int   curDigit;
    int   divider;
    uint32_t normTime;
} DigitSlot;

void digitslot_layer_init(DigitSlot *slot, GRect rect, int divider, int startDigit);
void digitslot_layer_update(DigitSlot *slot, GContext *ctx);

#endif
